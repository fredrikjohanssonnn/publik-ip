{"version":3,"sources":["src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["isLoading","fetchIP","fetch","then","res","json","data","ip","document","querySelector","innerHTML","catch","error","console","result","getElementById","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","i","length","module"],"mappings":"ACAA,ACAA,IDAIgB,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;ADCA,ACCA,AFFA,SCCSZ,ACCAa,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;EAC5B,ACCA,IDDI,ACCAC,CDDChB,MCCM,GDDX,ACCce,EDDE,ECCE,CAACE,SAAL,EAAd;IDAEjB,SAAS,GAAGE,YAAY,EAAxB;EACD,ACADc,OAAO,CAACE,MAAR,GAAiB,YAAY;IAC3BH,IAAI,CAACI,MAAL,gCFJJ;ECKE,ACAC,CAFD,MDEOnB,SAAP;AACD;ECACgB,OAAO,CAACI,IAAR,GAAeL,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCC,IAAI,CAACC,GAAL,EAA/C;ADEF,ECDER,IAAI,CAACS,EDCEtB,QCDP,CAAgBuB,GDClB,GAAwB,MCDtB,CAA6BT,OAA7B,EAAsCD,IAAI,CAACW,WAA3C;AACD,EDCC;ADRF,ECSE,EDTE1C,ECSE,ODTO,GAAG,IAAhB;AESA,IDCI,ACDA2C,MDCM,IAAIxB,ACDA,GAAG,EDCP,EAAN,ACDJ;AFPA,ECSG,CAFD,CAEE,ADTElB,OCSKmB,ADTE,GCST,EAAY;ACDhB,EFRa,ECUT,IAAIC,CCFCuB,MDEM,GAAG,ACFlB,CDEmB,ECFE,GDEGxB,GAAG,CAACE,KAAV,EAAiBC,KAAjB,CAAuB,+BDVzB,gCCUE,CAAd;ECDF,EFTc,EESVoB,UAAJ,EAAgB;IDEd,ACDA,AFVY,ICWRtB,OAAJ,EAAa;ECAd,IDCG,ADZU,OCYHG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;IACD,IDbW;ECcb,ACDDsB,QFbc,EEaJ,GAAGE,UAAU,CAAC,YAAY;IAClC,IAAIC,IFdQ,CEcH,GAAGtC,QAAQ,CAACuC,gBAAT,CAA0B,wBAA1B,CAAZ;EDEF,OAAO,GAAP,ADhBc,OACO7C,KAAK,CAAC,oCAAD,CAAL,CAClBC,IADkB,CACb,UAACC,GAAD;ACeT,ICFG,KAAK,IAAI4C,CAAC,AFbJ,GEaO,CAAb,EAAgBA,CAAC,AFbF5C,GEaK0C,AFbF,CAACzC,IEaM,AFbV,CEaW4C,CFbpB,KEaN,EAAkCD,CAAC,EAAnC,EAAuC;MACrC,IAAIpB,EFdA,CADa,EAElBzB,CEaW,CAACqB,EFfM,CAEb,OEaA,CAAkBsB,EFbjBxC,GEasB,CAAC0C,AFbxB,CEauB,CAAL,AFbR,CEaiBZ,IAA3B,MAAqCR,MAAM,CAACV,YAAP,EAAzC,EAAgE;ADGtE,QCFQY,CDECN,KDfH,IEaY,AFbNjB,CCeZ,ACFmBuC,CDECrB,ADfN,GCed,ADfiBnB,CEaO,CDEC,ACFA0C,CAAD,CAAN,AFbG,CEab,AFbczC,EAAhB;ECgBJ,ICFK,GDEE,CAAC,IDfJC,CCeSiB,GAAN,EAAWC,EDfN,CAACjB,ICeN,CAAmB,QDftB,CAAuB,KAAvB,EAA8BC,SAA9B,GAA0CH,EAA1C,kDCeG,EAAqG,IAArG,IAA6G,GAApH;AACD,ICFI,UFbCP,SAAS,GAAG,KAAZ;YACD,CANkB,EAOlBW,KAPkB,CAOZ,UAACC,KAAD;ACeXe,ICFIgB,GDEG,CAACzB,MCFM,AFbH,GEaM,GDEjB,CCFI,AFbkBL,ECeCI,KDfM,CAACL,KAAR,CAAcA,KAAd,CCetB,ADfW;ACgBXe,ECFG,CATsB,EASpB,EDEE,ACXkB,CDWjBH,ACXN,IFLS,CAPY,CADP,ICwBhB,GAAqBA,UAArB;ACDC;UFvBe;AEyBhB0B,MAAM,CAACvB,KFxBCb,EEwBR,GAAiB8B,CFzBD,QEyBhB;;UFzBgB;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAP3C,OAAO;IAAA;EAAA;AAAA,GAAb;;AAWAA,OAAO;AAEPO,QAAQ,CAACO,cAAT,CAAwB,KAAxB,EAA+BL,SAA/B,qHAIsBV,SAAS,IAAI,WAJnC","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\nlet isLoading = true;\n\nconst fetchIP = async () => {\n  const result = await fetch(\"https://api.ipify.org/?format=json\")\n    .then((res) => res.json())\n    .then((data) => {\n      const ip = data.ip;\n      document.querySelector(\".ip\").innerHTML = ip;\n      isLoading = false;\n    })\n    .catch((error) => console.error(error));\n};\n\nfetchIP();\n\ndocument.getElementById(\"app\").innerHTML = `\n<main>\n  <div class=\"container\">\n    <h1>Din publika IP-adress är:</h1>\n    <div class=\"ip\">${isLoading && \"Laddar...\"}</div>\n    <p class=\"vpn-info\">PS. Avaktivera din VPN-klient om du använder en sådan. T.ex. för att komma åt ditt arbetes intranät från ditt hem. Annars kommer IP-adressen som visas inte att vara din egna.</p>\n  </div>\n</main>\n`;","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}